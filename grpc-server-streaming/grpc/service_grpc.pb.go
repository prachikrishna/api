// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PageInfoServiceClient is the client API for PageInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PageInfoServiceClient interface {
	GetDetails(ctx context.Context, in *PageRequest, opts ...grpc.CallOption) (PageInfoService_GetDetailsClient, error)
}

type pageInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPageInfoServiceClient(cc grpc.ClientConnInterface) PageInfoServiceClient {
	return &pageInfoServiceClient{cc}
}

func (c *pageInfoServiceClient) GetDetails(ctx context.Context, in *PageRequest, opts ...grpc.CallOption) (PageInfoService_GetDetailsClient, error) {
	stream, err := c.cc.NewStream(ctx, &PageInfoService_ServiceDesc.Streams[0], "/v1.PageInfoService/GetDetails", opts...)
	if err != nil {
		return nil, err
	}
	x := &pageInfoServiceGetDetailsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PageInfoService_GetDetailsClient interface {
	Recv() (*PageItems, error)
	grpc.ClientStream
}

type pageInfoServiceGetDetailsClient struct {
	grpc.ClientStream
}

func (x *pageInfoServiceGetDetailsClient) Recv() (*PageItems, error) {
	m := new(PageItems)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PageInfoServiceServer is the server API for PageInfoService service.
// All implementations must embed UnimplementedPageInfoServiceServer
// for forward compatibility
type PageInfoServiceServer interface {
	GetDetails(*PageRequest, PageInfoService_GetDetailsServer) error
	mustEmbedUnimplementedPageInfoServiceServer()
}

// UnimplementedPageInfoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPageInfoServiceServer struct {
}

func (UnimplementedPageInfoServiceServer) GetDetails(*PageRequest, PageInfoService_GetDetailsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDetails not implemented")
}
func (UnimplementedPageInfoServiceServer) mustEmbedUnimplementedPageInfoServiceServer() {}

// UnsafePageInfoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PageInfoServiceServer will
// result in compilation errors.
type UnsafePageInfoServiceServer interface {
	mustEmbedUnimplementedPageInfoServiceServer()
}

func RegisterPageInfoServiceServer(s grpc.ServiceRegistrar, srv PageInfoServiceServer) {
	s.RegisterService(&PageInfoService_ServiceDesc, srv)
}

func _PageInfoService_GetDetails_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PageRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PageInfoServiceServer).GetDetails(m, &pageInfoServiceGetDetailsServer{stream})
}

type PageInfoService_GetDetailsServer interface {
	Send(*PageItems) error
	grpc.ServerStream
}

type pageInfoServiceGetDetailsServer struct {
	grpc.ServerStream
}

func (x *pageInfoServiceGetDetailsServer) Send(m *PageItems) error {
	return x.ServerStream.SendMsg(m)
}

// PageInfoService_ServiceDesc is the grpc.ServiceDesc for PageInfoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PageInfoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.PageInfoService",
	HandlerType: (*PageInfoServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetDetails",
			Handler:       _PageInfoService_GetDetails_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service.proto",
}
